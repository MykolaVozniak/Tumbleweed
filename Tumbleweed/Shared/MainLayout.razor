﻿@using Tumbleweed.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>Tumbleweed</PageTitle>

<div class="page">

    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
        <AuthorizeView>
            <Authorized>         
                    <a href="/account">My Account</a>
                    <a @onclick="Logout" href="javascript:void(0)">Logout</a>
            </Authorized>
            <NotAuthorized>
                    <a href="/register">Register</a>
                    <a href="/login">Login</a>
            </NotAuthorized>
        </AuthorizeView>
        </div>
        

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    private async Task Logout()
    {
        var customAuthStateProvider = (TumbleweedAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }

}